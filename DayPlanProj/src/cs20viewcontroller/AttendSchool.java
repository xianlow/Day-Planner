/*
 * WARNING: There is nothing in this file for students to edit or change.
 *          This file is intended to have no student-serviceable code.
 *
 * "Draw" your GUI using the "Design" tab, and remember to give
 * them memorable variable names in the "Properties" panel
 * as well as make them public variables.
 * 
 * For convenience, you may want to set the default visibility of 
 * GUI elements to be public by going to:
 *    The NetBeans Preferences or Settings menu -> Miscellaneous -> GUI Builder
 * Then set Variables Modifier to public.
 */
package cs20viewcontroller;

import cs20models.AllModelsForView;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;


/**
 * WARNING: Do NOT modify or write any code in this file!
 *
 * @author cheng
 */
public class AttendSchool extends AllModelsForView {
    // WARNING: Do NOT modify or write any code in this file!
    // <editor-fold defaultstate="collapsed" desc="Generated Code">

    public AttendSchool() {
        initComponents();
    }// </editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        manyHours = new javax.swing.JDialog();
        Button1 = new javax.swing.JRadioButton();
        Button2 = new javax.swing.JRadioButton();
        Button3 = new javax.swing.JRadioButton();
        Button4 = new javax.swing.JRadioButton();
        selectButton = new javax.swing.JButton();
        otherText = new javax.swing.JTextField();
        OtherButton = new javax.swing.JRadioButton();
        QuestionField = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        HintField = new java.awt.List();
        changeGui = new javax.swing.JButton();
        changeButton = new javax.swing.JToggleButton();
        startButton = new javax.swing.JButton();
        totalHours = new javax.swing.JTextField();
        saveList = new java.awt.List();

        org.jdesktop.layout.GroupLayout manyHoursLayout = new org.jdesktop.layout.GroupLayout(manyHours.getContentPane());
        manyHours.getContentPane().setLayout(manyHoursLayout);
        manyHoursLayout.setHorizontalGroup(
            manyHoursLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        manyHoursLayout.setVerticalGroup(
            manyHoursLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(Button1);
        Button1.setText("2 Hours");
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(Button2);
        Button2.setText("4 Hours");
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(Button3);
        Button3.setText("6 Hours");
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(Button4);
        Button4.setText("8 Hours");
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        selectButton.setText("Select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        otherText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherTextActionPerformed(evt);
            }
        });

        buttonGroup1.add(OtherButton);
        OtherButton.setText("Other");

        QuestionField.setEditable(false);
        QuestionField.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                QuestionFieldComponentHidden(evt);
            }
        });
        QuestionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuestionFieldActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        HintField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        HintField.setMultipleMode(true);
        HintField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HintFieldActionPerformed(evt);
            }
        });

        changeGui.setText("Make Schedule");
        changeGui.setEnabled(false);
        changeGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeGuiActionPerformed(evt);
            }
        });

        changeButton.setText("Change");
        changeButton.setEnabled(false);
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        totalHours.setEditable(false);
        totalHours.setText("Total Hours:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(56, 56, 56)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(HintField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(Button1)
                                    .add(Button4)
                                    .add(Button2)
                                    .add(Button3))
                                .add(32, 32, 32)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(layout.createSequentialGroup()
                                        .add(QuestionField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 439, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(51, 51, 51))
                                    .add(layout.createSequentialGroup()
                                        .add(totalHours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 156, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(startButton)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(saveList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 324, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(layout.createSequentialGroup()
                                .add(91, 91, 91)
                                .add(changeButton)
                                .add(28, 28, 28)
                                .add(SaveButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(selectButton))
                            .add(layout.createSequentialGroup()
                                .addContainerGap()
                                .add(OtherButton)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(otherText)))
                        .add(48, 48, 48)
                        .add(changeGui)
                        .add(91, 91, 91)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(HintField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(22, 22, 22)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(Button1)
                    .add(QuestionField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(startButton)
                        .add(29, 29, 29)
                        .add(totalHours, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(Button2)
                                .add(24, 24, 24)
                                .add(Button3)
                                .add(8, 8, 8)
                                .add(Button4))
                            .add(saveList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(OtherButton)
                            .add(otherText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 31, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(changeButton)
                    .add(SaveButton)
                    .add(selectButton)
                    .add(changeGui))
                .add(73, 73, 73))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuestionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuestionFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_QuestionFieldActionPerformed

    private void HintFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HintFieldActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_HintFieldActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        this.Button1.setVisible(true);
        this.Button2.setVisible(true);
        this.Button3.setVisible(true);
        this.Button4.setVisible(true);
        this.HintField.setVisible(true);
        this.OtherButton.setVisible(true);
        this.QuestionField.setVisible(true);
        this.SaveButton.setVisible(true);
        this.changeButton.setVisible(true);
        this.changeGui.setVisible(true);
        this.otherText.setVisible(true);
        this.saveList.setVisible(true);
        this.selectButton.setVisible(true);
        this.startButton.setVisible(false);
        this.totalHours.setVisible(true);
        this.QuestionField.setText(dayPlanModel.setQuestion(0));
        this.setSize(650, 400);
        dayPlanModel.getQuestionsAsked();
    }//GEN-LAST:event_startButtonActionPerformed

    private void QuestionFieldComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_QuestionFieldComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_QuestionFieldComponentHidden

    private void otherTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherTextActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        // TODO add your handling code here:
        displayResult();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void changeGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeGuiActionPerformed
        // TODO add your handling code here:
        changeGui();
    }//GEN-LAST:event_changeGuiActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        dayPlanModel.setAddUp(8);
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        dayPlanModel.setAddUp(6);
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        dayPlanModel.setAddUp(4);
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        dayPlanModel.setAddUp(2);
    }//GEN-LAST:event_Button1ActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        changeAnswer();
    }//GEN-LAST:event_changeButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        try {
            // TODO add your handling code here:
            dayPlanModel.saveToFile(showSaveDialog());
        } catch (IOException ex) {
            Logger.getLogger(AttendSchool.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveButtonActionPerformed
    // WARNING: Do NOT modify or write any code in this file!
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JRadioButton Button1;
    public javax.swing.JRadioButton Button2;
    public javax.swing.JRadioButton Button3;
    public javax.swing.JRadioButton Button4;
    public java.awt.List HintField;
    public javax.swing.JRadioButton OtherButton;
    public javax.swing.JTextField QuestionField;
    public javax.swing.JButton SaveButton;
    public javax.swing.ButtonGroup buttonGroup1;
    public javax.swing.JToggleButton changeButton;
    public javax.swing.JButton changeGui;
    public javax.swing.JDialog manyHours;
    public javax.swing.JTextField otherText;
    public java.awt.List saveList;
    public javax.swing.JButton selectButton;
    public javax.swing.JButton startButton;
    public javax.swing.JTextField totalHours;
    // End of variables declaration//GEN-END:variables

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FinalResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FinalResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FinalResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FinalResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new AttendSchool().setVisible(true);

            }
        });
    }

    public void changeGui() {
        FinalResult showView = new FinalResult();
        
        showView.field1.setText(Double.toString(dayPlanModel.getQuestion5()) + " hours");

        double question4 = Math.round(dayPlanModel.getQuestion4() * 100.0) / 100.0;
        showView.field2.setText(Double.toString(question4) + " hours");
        
        showView.field3.setText(Double.toString(dayPlanModel.getQuestion2()) + " hours");
        
        showView.field4.setText(Double.toString(dayPlanModel.getQuestion3()) + " hours");
        
        showView.field5.setText(Double.toString(question4) + " hours");
        
        showView.field6.setText(Double.toString(dayPlanModel.getQuestion1()) + " hours");
        
        showView.field7.setText(Double.toString(question4) + " hours");
        
        showView.setVisible(true);

        this.dispose();

    }

    public String showSaveDialog() {

        JFileChooser jfc = new JFileChooser();
        int status = jfc.showSaveDialog(this);
        if (status == JFileChooser.APPROVE_OPTION) {
            File theFile = jfc.getSelectedFile();
            String thePath = theFile.getAbsolutePath();
            return thePath;
        }

        return null;

    }

    public void displayResult() {
        JOptionPane newDialog = new JOptionPane();
        
        if (this.Button1.isSelected() || this.Button2.isSelected() || this.Button3.isSelected() || this.Button4.isSelected()
                || this.OtherButton.isSelected()) {

            if (this.OtherButton.isSelected()) {
                int x = Integer.parseInt(otherText.getText());
                dayPlanModel.setAddUp(x);
            }
            if (dayPlanModel.setQuestionsAsked() == 1) {
                if (dayPlanModel.getAddUp() < 8) {
                    dayPlanModel.setHintTotal(dayPlanModel.setHints(0));
                    this.HintField.add(dayPlanModel.getHintTotal());

                }

                dayPlanModel.setQuestion1(dayPlanModel.getAddUp());
            } else if (dayPlanModel.setQuestionsAsked() == 2) {
                if (dayPlanModel.getAddUp() < 8) {
                    dayPlanModel.setHintTotal(dayPlanModel.setHints(1));
                    this.HintField.add(dayPlanModel.getHintTotal());
                }

                dayPlanModel.setQuestion2(dayPlanModel.getAddUp());
            } else if (dayPlanModel.setQuestionsAsked() == 3) {
                if (dayPlanModel.getAddUp() < 6) {
                    dayPlanModel.setHintTotal(dayPlanModel.setHints(2));
                    this.HintField.add(dayPlanModel.getHintTotal());
                }

                dayPlanModel.setQuestion3(dayPlanModel.getAddUp());
            } else if (dayPlanModel.setQuestionsAsked() == 4) {
                if (dayPlanModel.getAddUp() < 5) {
                    dayPlanModel.setHintTotal(dayPlanModel.setHints(3));
                    this.HintField.add(dayPlanModel.getHintTotal());

                }
                dayPlanModel.setQuestion4(dayPlanModel.getAddUp() / 3);
                if(dayPlanModel.getQuestion4() == 0){
                    dayPlanModel.setQuestion4(1);
                }
System.out.println(dayPlanModel.getQuestion4());
            } else if (dayPlanModel.setQuestionsAsked() == 5) {
                if (dayPlanModel.getAddUp() < 3) {
                    dayPlanModel.setHintTotal(dayPlanModel.setHints(4));
                    this.HintField.add(dayPlanModel.getHintTotal());

                }
                dayPlanModel.setQuestion5(dayPlanModel.getAddUp());
            
dayPlanModel.setTotal(dayPlanModel.getQuestion1() + dayPlanModel.getQuestion2() + dayPlanModel.getQuestion3() + dayPlanModel.getQuestion4()
                    + dayPlanModel.getQuestion4() + dayPlanModel.getQuestion4()+ dayPlanModel.getQuestion5());

                if (dayPlanModel.getTotal() > 24) {
                    newDialog.showMessageDialog(this.manyHours, "You have too many hours\n Please click the list with your times and click change when "
                            + "you click on one of the hours \n" + "You have " + dayPlanModel.getTotal() + " hours.");
                    this.changeButton.setEnabled(true);
                    this.selectButton.setEnabled(false);
                } else if (dayPlanModel.getTotal() < 24) {
                    newDialog.showMessageDialog(this.manyHours, "You have too little hours\n Please click the list with your times and click change when "
                            + "you click on one of the hours \n" + "You have " + dayPlanModel.getTotal() + " hours.");
                    this.changeButton.setEnabled(true);
                    this.selectButton.setEnabled(false);
                } else if (dayPlanModel.getTotal() < 25 && dayPlanModel.getTotal() > 23) {
                    this.changeGui.setEnabled(true);
                    JFrame switchDialog = new JFrame();
                    String message = "Would you like to switch any of your answers? If yes click yes. If no, click no";
                    int answer = JOptionPane.showConfirmDialog(switchDialog, message);
                    if (answer == JOptionPane.YES_OPTION) {
                        this.changeButton.setEnabled(true);
                    }
                    this.selectButton.setEnabled(false);
                }
            }
            
            dayPlanModel.setShowTotal(dayPlanModel.getQuestion1() + dayPlanModel.getQuestion2() + dayPlanModel.getQuestion3() + dayPlanModel.getQuestion4()
                    + dayPlanModel.getQuestion4() + dayPlanModel.getQuestion4() + dayPlanModel.getQuestion5());

            this.totalHours.setText("Total Hours: " + dayPlanModel.getTotal());
            this.buttonGroup1.clearSelection();
            dayPlanModel.setSaveString(this.QuestionField.getText());
            this.saveList.add(dayPlanModel.getSaveString());
            dayPlanModel.setAddUp(0);
            this.otherText.setText("");
            this.QuestionField.setText(dayPlanModel.setQuestion(dayPlanModel.setQuestionsAsked()));
            dayPlanModel.getQuestionsAsked();
        }

    }

    public void changeAnswer() {

        String[] arrayList = this.HintField.getItems();
        int x = 0;
        String field = "";
        while (x < this.HintField.getItems().length) {

            field += " " + arrayList[x];
            x++;

        }

        this.QuestionField.setText(dayPlanModel.getQuestions(this.saveList.getSelectedIndex()));
        if (dayPlanModel.getQuestions(this.saveList.getSelectedIndex()).indexOf("stay at school") >= 0) {

            this.QuestionField.setText(dayPlanModel.setQuestion(1));
            dayPlanModel.setQuestion2(dayPlanModel.getAddUp());
            if (dayPlanModel.getQuestion2() == 8) {
                this.HintField.remove(dayPlanModel.getHints(1));
            } else if (!field.contains(dayPlanModel.getHints(1))) {
                this.HintField.add(dayPlanModel.getHints(1));
            }

        } else if (dayPlanModel.getQuestions(this.saveList.getSelectedIndex()).indexOf("free time") >= 0) {

            this.QuestionField.setText(dayPlanModel.setQuestion(2));
            dayPlanModel.setQuestion3(dayPlanModel.getAddUp());
            if (dayPlanModel.getQuestion3() == 6) {
                this.HintField.remove(dayPlanModel.getHints(2));
            } else if (!field.contains(dayPlanModel.getHints(2))) {
                this.HintField.add(dayPlanModel.getHints(2));
            }
        } else if (dayPlanModel.getQuestions(this.saveList.getSelectedIndex()).indexOf("eat your meals") >= 0) {

            this.QuestionField.setText(dayPlanModel.setQuestion(3));
            dayPlanModel.setQuestion4(dayPlanModel.getAddUp() / 3);
            if(dayPlanModel.getQuestion4() == 0){
                dayPlanModel.setQuestion4(1);
            }
            if (dayPlanModel.getQuestion4() >= 4) {
                this.HintField.remove(dayPlanModel.getHints(3));
            } else if (!field.contains(dayPlanModel.getHints(3))) {
                this.HintField.add(dayPlanModel.getHints(3));
            }
        } else if (dayPlanModel.getQuestions(this.saveList.getSelectedIndex()).indexOf("prepare for school") >= 0) {

            this.QuestionField.setText(dayPlanModel.setQuestion(4));
            dayPlanModel.setQuestion5(dayPlanModel.getAddUp());
            if (dayPlanModel.getQuestion5() == 2) {
                this.HintField.remove(dayPlanModel.getHints(4));
            } else if (!field.contains(dayPlanModel.getHints(4))) {
                this.HintField.add(dayPlanModel.getHints(4));
            }
        } else if (dayPlanModel.getQuestions(this.saveList.getSelectedIndex()).indexOf("sleep") >= 0) {
            this.QuestionField.setText(dayPlanModel.getQuestions(0));
            dayPlanModel.setQuestion1(dayPlanModel.getAddUp());
            if (dayPlanModel.getQuestion1() == 8) {
                this.HintField.remove(dayPlanModel.getHints(0));
            } else if (!field.contains(dayPlanModel.getHints(0))) {
                this.HintField.add(dayPlanModel.getHints(0));
            }
        }

        dayPlanModel.setTotal(dayPlanModel.getQuestion1() + dayPlanModel.getQuestion2() + dayPlanModel.getQuestion3() + dayPlanModel.getQuestion4()
                + dayPlanModel.getQuestion4() + dayPlanModel.getQuestion4() + dayPlanModel.getQuestion5());
        if (dayPlanModel.getTotal() < 25 && dayPlanModel.getTotal() > 23) {
            this.changeGui.setEnabled(true);
        } else {
            this.changeGui.setEnabled(false);
        }
        this.totalHours.setText("Total hours: " + Double.toString(dayPlanModel.getTotal()));
        this.saveList.replaceItem(this.QuestionField.getText() + " " + dayPlanModel.getAddUp() + " hours", this.saveList.getSelectedIndex());
        this.buttonGroup1.clearSelection();
        System.out.println(dayPlanModel.getTotal());
        dayPlanModel.setAddUp(0);
        this.otherText.setText("");
        this.QuestionField.setText("");

    }

}
